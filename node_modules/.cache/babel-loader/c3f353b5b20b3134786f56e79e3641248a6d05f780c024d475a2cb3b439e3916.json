{"ast":null,"code":"var _jsxFileName = \"F:\\\\CODESIS-main\\\\my-calc\\\\calc\\\\src\\\\components\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Calculator.css';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  const [display, setDisplay] = useState('0');\n  const [expression, setExpression] = useState('');\n  const [shouldResetDisplay, setShouldResetDisplay] = useState(false);\n  const handleNumber = number => {\n    if (shouldResetDisplay) {\n      setDisplay(number);\n      setShouldResetDisplay(false);\n    } else {\n      setDisplay(display === '0' ? number : display + number);\n    }\n  };\n  const handleOperator = operator => {\n    setShouldResetDisplay(true);\n    setExpression(expression + display + operator);\n    setDisplay('0');\n  };\n  const handleDecimal = () => {\n    if (shouldResetDisplay) {\n      setDisplay('0.');\n      setShouldResetDisplay(false);\n    } else if (!display.includes('.')) {\n      setDisplay(display + '.');\n    }\n  };\n  const handleClear = () => {\n    setDisplay('0');\n    setExpression('');\n    setShouldResetDisplay(false);\n  };\n  const handleEquals = () => {\n    try {\n      const fullExpression = expression + display;\n      // eslint-disable-next-line no-eval\n      const result = eval(fullExpression);\n      setDisplay(String(result));\n      setExpression('');\n      setShouldResetDisplay(true);\n    } catch (error) {\n      setDisplay('Error');\n      setExpression('');\n      setShouldResetDisplay(true);\n    }\n  };\n  const handlePercentage = () => {\n    try {\n      const currentValue = parseFloat(display);\n      const percentage = currentValue / 100;\n      setDisplay(String(percentage));\n    } catch (error) {\n      setDisplay('Error');\n    }\n  };\n  const handleParentheses = parenthesis => {\n    if (shouldResetDisplay) {\n      setDisplay(parenthesis);\n      setShouldResetDisplay(false);\n    } else {\n      setDisplay(display + parenthesis);\n    }\n  };\n  const buttonConfig = [{\n    text: 'C',\n    type: 'clear',\n    onClick: handleClear\n  }, {\n    text: '(',\n    type: 'parentheses',\n    onClick: () => handleParentheses('(')\n  }, {\n    text: ')',\n    type: 'parentheses',\n    onClick: () => handleParentheses(')')\n  }, {\n    text: '÷',\n    type: 'operator',\n    onClick: () => handleOperator('/')\n  }, {\n    text: '7',\n    type: 'number',\n    onClick: () => handleNumber('7')\n  }, {\n    text: '8',\n    type: 'number',\n    onClick: () => handleNumber('8')\n  }, {\n    text: '9',\n    type: 'number',\n    onClick: () => handleNumber('9')\n  }, {\n    text: '×',\n    type: 'operator',\n    onClick: () => handleOperator('*')\n  }, {\n    text: '4',\n    type: 'number',\n    onClick: () => handleNumber('4')\n  }, {\n    text: '5',\n    type: 'number',\n    onClick: () => handleNumber('5')\n  }, {\n    text: '6',\n    type: 'number',\n    onClick: () => handleNumber('6')\n  }, {\n    text: '−',\n    type: 'operator',\n    onClick: () => handleOperator('-')\n  }, {\n    text: '1',\n    type: 'number',\n    onClick: () => handleNumber('1')\n  }, {\n    text: '2',\n    type: 'number',\n    onClick: () => handleNumber('2')\n  }, {\n    text: '3',\n    type: 'number',\n    onClick: () => handleNumber('3')\n  }, {\n    text: '+',\n    type: 'operator',\n    onClick: () => handleOperator('+')\n  }, {\n    text: '0',\n    type: 'number',\n    onClick: () => handleNumber('0'),\n    span: 2\n  }, {\n    text: '.',\n    type: 'decimal',\n    onClick: handleDecimal\n  }, {\n    text: '=',\n    type: 'equals',\n    onClick: handleEquals\n  }, {\n    text: '%',\n    type: 'percentage',\n    onClick: handlePercentage\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expression\",\n        children: expression\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-value\",\n        children: display\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-buttons\",\n      children: buttonConfig.map((button, index) => /*#__PURE__*/_jsxDEV(Button, {\n        text: button.text,\n        type: button.type,\n        onClick: button.onClick,\n        span: button.span\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"nW3hsAf7kThKI7GHIn5JkovEGo8=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Calculator","_s","display","setDisplay","expression","setExpression","shouldResetDisplay","setShouldResetDisplay","handleNumber","number","handleOperator","operator","handleDecimal","includes","handleClear","handleEquals","fullExpression","result","eval","String","error","handlePercentage","currentValue","parseFloat","percentage","handleParentheses","parenthesis","buttonConfig","text","type","onClick","span","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","button","index","_c","$RefreshReg$"],"sources":["F:/CODESIS-main/my-calc/calc/src/components/Calculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Calculator.css';\r\nimport Button from './Button';\r\n\r\nconst Calculator = () => {\r\n  const [display, setDisplay] = useState('0');\r\n  const [expression, setExpression] = useState('');\r\n  const [shouldResetDisplay, setShouldResetDisplay] = useState(false);\r\n\r\n  const handleNumber = (number) => {\r\n    if (shouldResetDisplay) {\r\n      setDisplay(number);\r\n      setShouldResetDisplay(false);\r\n    } else {\r\n      setDisplay(display === '0' ? number : display + number);\r\n    }\r\n  };\r\n\r\n  const handleOperator = (operator) => {\r\n    setShouldResetDisplay(true);\r\n    setExpression(expression + display + operator);\r\n    setDisplay('0');\r\n  };\r\n\r\n  const handleDecimal = () => {\r\n    if (shouldResetDisplay) {\r\n      setDisplay('0.');\r\n      setShouldResetDisplay(false);\r\n    } else if (!display.includes('.')) {\r\n      setDisplay(display + '.');\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setDisplay('0');\r\n    setExpression('');\r\n    setShouldResetDisplay(false);\r\n  };\r\n\r\n  const handleEquals = () => {\r\n    try {\r\n      const fullExpression = expression + display;\r\n      // eslint-disable-next-line no-eval\r\n      const result = eval(fullExpression);\r\n      setDisplay(String(result));\r\n      setExpression('');\r\n      setShouldResetDisplay(true);\r\n    } catch (error) {\r\n      setDisplay('Error');\r\n      setExpression('');\r\n      setShouldResetDisplay(true);\r\n    }\r\n  };\r\n\r\n  const handlePercentage = () => {\r\n    try {\r\n      const currentValue = parseFloat(display);\r\n      const percentage = currentValue / 100;\r\n      setDisplay(String(percentage));\r\n    } catch (error) {\r\n      setDisplay('Error');\r\n    }\r\n  };\r\n\r\n  const handleParentheses = (parenthesis) => {\r\n    if (shouldResetDisplay) {\r\n      setDisplay(parenthesis);\r\n      setShouldResetDisplay(false);\r\n    } else {\r\n      setDisplay(display + parenthesis);\r\n    }\r\n  };\r\n\r\n  const buttonConfig = [\r\n    { text: 'C', type: 'clear', onClick: handleClear },\r\n    { text: '(', type: 'parentheses', onClick: () => handleParentheses('(') },\r\n    { text: ')', type: 'parentheses', onClick: () => handleParentheses(')') },\r\n    { text: '÷', type: 'operator', onClick: () => handleOperator('/') },\r\n    \r\n    { text: '7', type: 'number', onClick: () => handleNumber('7') },\r\n    { text: '8', type: 'number', onClick: () => handleNumber('8') },\r\n    { text: '9', type: 'number', onClick: () => handleNumber('9') },\r\n    { text: '×', type: 'operator', onClick: () => handleOperator('*') },\r\n    \r\n    { text: '4', type: 'number', onClick: () => handleNumber('4') },\r\n    { text: '5', type: 'number', onClick: () => handleNumber('5') },\r\n    { text: '6', type: 'number', onClick: () => handleNumber('6') },\r\n    { text: '−', type: 'operator', onClick: () => handleOperator('-') },\r\n    \r\n    { text: '1', type: 'number', onClick: () => handleNumber('1') },\r\n    { text: '2', type: 'number', onClick: () => handleNumber('2') },\r\n    { text: '3', type: 'number', onClick: () => handleNumber('3') },\r\n    { text: '+', type: 'operator', onClick: () => handleOperator('+') },\r\n    \r\n    { text: '0', type: 'number', onClick: () => handleNumber('0'), span: 2 },\r\n    { text: '.', type: 'decimal', onClick: handleDecimal },\r\n    { text: '=', type: 'equals', onClick: handleEquals },\r\n    { text: '%', type: 'percentage', onClick: handlePercentage },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <div className=\"calculator-display\">\r\n        <div className=\"expression\">{expression}</div>\r\n        <div className=\"current-value\">{display}</div>\r\n      </div>\r\n      <div className=\"calculator-buttons\">\r\n        {buttonConfig.map((button, index) => (\r\n          <Button\r\n            key={index}\r\n            text={button.text}\r\n            type={button.type}\r\n            onClick={button.onClick}\r\n            span={button.span}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}